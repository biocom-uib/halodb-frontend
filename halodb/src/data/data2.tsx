const columns = [
    {title: "id", dataIndex: "id", key: "id"},
    {title: "created", dataIndex: "created", key: "created"},
    {title: "updated", dataIndex: "updated", key: "updated"},
    {title: "user", dataIndex: "user_id", key: "user_id"},
    {title: "Taxonumber", dataIndex: "txnr", key: "txnr"},
    {title: "Version", dataIndex: "version", key: "version"},
    {title: "Date of the entry", dataIndex: "entrydate", key: "entrydate"},
    {title: "First submission date", dataIndex: "firstdate", key: "firstdate"},
    {title: "Draft number", dataIndex: "draftnumber", key: "draftnumber"},
    {title: "Submitter", dataIndex: "subm", key: "subm"},
    {title: "Email of the submitter", dataIndex: "emsu", key: "emsu"},
    {title: "Authors", dataIndex: "auth", key: "auth"},
    {title: "Title", dataIndex: "titl", key: "titl"},
    {title: "Journal", dataIndex: "jour", key: "jour"},
    {title: "Volume", dataIndex: "volume", key: "volume"},
    {title: "Pages", dataIndex: "pages", key: "pages"},
    {title: "DOI", dataIndex: "doi", key: "doi"},
    {title: "Corresponding author", dataIndex: "coau", key: "coau"},
    {title: "Email of the corresponding author", dataIndex: "emau", key: "emau"},
    {title: "Cutured", dataIndex: "cult", key: "cult"},
    {title: "Kind of material", dataIndex: "koma", key: "koma"},
    {title: "Is for a new taxon?", dataIndex: "typn", key: "typn"},
    {title: "Type strain", dataIndex: "otyp", key: "otyp"},
    {title: "Taxonumber of the type material", dataIndex: "txnt", key: "txnt"},
    {title: "Submitted to culture collection", dataIndex: "ccsu", key: "ccsu"},
    {title: "Designed type strain name", dataIndex: "type", key: "type"},
    {title: "Strain collection numbers", dataIndex: "coln", key: "coln"},
    {title: "Domain", dataIndex: "domain", key: "domain"},
    {title: "Kingdom", dataIndex: "kingdom", key: "kingdom"},
    {title: "Phylum", dataIndex: "phylum", key: "phylum"},
    {title: "Phylum etymology", dataIndex: "phylumety", key: "phylumety"},
    {title: "Class", dataIndex: "class", key: "class"},
    {title: "Class etymology", dataIndex: "classety", key: "classety"},
    {title: "Order", dataIndex: "order", key: "order"},
    {title: "Order etymology", dataIndex: "orderety", key: "orderety"},
    {title: "Family", dataIndex: "family", key: "family"},
    {title: "Family etymology", dataIndex: "familyety", key: "familyety"},
    {title: "Genus", dataIndex: "gena", key: "gena"},
    {title: "Genus etymology", dataIndex: "gety", key: "gety"},
    {title: "Type species of the genus", dataIndex: "gent", key: "gent"},
    {title: "Specific epithet", dataIndex: "spep", key: "spep"},
    {title: "Species etymology", dataIndex: "spty", key: "spty"},
    {title: "Species name", dataIndex: "spna", key: "spna"},
    {title: "Basonym", dataIndex: "baso", key: "baso"},
    {title: "Subspecies", dataIndex: "ssna", key: "ssna"},
    {title: "Subspecies etymology", dataIndex: "ssty", key: "ssty"},
    {title: "Other", dataIndex: "coth", key: "coth"},
    {title: "16s rRNA", dataIndex: "sixteensr", key: "sixteensr"},
    {title: "Alternative housekeeping", dataIndex: "hkgn", key: "hkgn"},
    {title: "Metagenome accession number", dataIndex: "meca", key: "meca"},
    {title: "RefSeq", dataIndex: "gare", key: "gare"},
    {title: "EMBL", dataIndex: "gaem", key: "gaem"},
    {title: "other", dataIndex: "binn", key: "binn"},
    {title: "URL", dataIndex: "url", key: "url"},
    {title: "Genome status", dataIndex: "gsta", key: "gsta"},
    {title: "Completeness", dataIndex: "completeness", key: "completeness"},
    {title: "Contamination", dataIndex: "contamination", key: "contamination"},
    {title: "Method", dataIndex: "method", key: "method"},
    {title: "Genome size", dataIndex: "gsiz", key: "gsiz"},
    {title: "GC mol %", dataIndex: "ggcm", key: "ggcm"},
    {title: "DNA extraction method", dataIndex: "dnae", key: "dnae"},
    {title: "Assembly", dataIndex: "asem", key: "asem"},
    {title: "Sequencing technology", dataIndex: "seqt", key: "seqt"},
    {title: "Binning software", dataIndex: "bins", key: "bins"},
    {title: "Assembly software", dataIndex: "asft", key: "asft"},
    {title: "Country", dataIndex: "coun", key: "coun"},
    {title: "Region", dataIndex: "regi", key: "regi"},
    {title: "Geographic location", dataIndex: "geol", key: "geol"},
    {title: "Latitude", dataIndex: "lati", key: "lati"},
    {title: "Longitude", dataIndex: "long", key: "long"},
    {title: "Altitude", dataIndex: "alti", key: "alti"},
    {title: "Depth", dataIndex: "dept", key: "dept"},
    {title: "Source", dataIndex: "sour", key: "sour"},
    {title: "Sampling date", dataIndex: "dats", key: "dats"},
    {title: "Hour of collection", dataIndex: "hocs", key: "hocs"},
    {title: "Date of isolation", dataIndex: "dati", key: "dati"},
    {title: "Date of isolation", dataIndex: "datu", key: "datu"},
    {title: "Temperature", dataIndex: "tems", key: "tems"},
    {title: "pH", dataIndex: "phsa", key: "phsa"},
    {title: "Salinity", dataIndex: "sals", key: "sals"},
    {title: "Energy metabolism", dataIndex: "emet", key: "emet"},
    {title: "Relationship to O2", dataIndex: "orel", key: "orel"},
    {title: "Terminal electron acceptor", dataIndex: "elac", key: "elac"},
    {title: "Temperature optimum", dataIndex: "temo", key: "temo"},
    {title: "Lowest temperature", dataIndex: "teml", key: "teml"},
    {title: "Highest temperature", dataIndex: "temh", key: "temh"},
    {title: "Temperature category", dataIndex: "temc", key: "temc"},
    {title: "pH optimum", dataIndex: "phop", key: "phop"},
    {title: "Lowest pH", dataIndex: "phlo", key: "phlo"},
    {title: "Highest pH", dataIndex: "phhi", key: "phhi"},
    {title: "ph Category", dataIndex: "phca", key: "phca"},
    {title: "Salinity optimum", dataIndex: "salo", key: "salo"},
    {title: "Lowest NaCl concentration", dataIndex: "sall", key: "sall"},
    {title: "Highest NaCl concentration", dataIndex: "salh", key: "salh"},
    {title: "Other salts", dataIndex: "salw", key: "salw"},
    {title: "Salinity category", dataIndex: "salc", key: "salc"},
    {title: "Biosafety level", dataIndex: "bios", key: "bios"},
    {title: "Habitat", dataIndex: "habt", key: "habt"},
    {title: "Biotic relationship", dataIndex: "bior", key: "bior"},
    {title: "Symbiosis with the host", dataIndex: "host", key: "host"},
    {title: "Known pathogenicity", dataIndex: "path", key: "path"},
    {title: "Miscellaneous", dataIndex: "extr", key: "extr"},
    {title: "Sample name", dataIndex: "name", key: "name"},
    {title: "Sample type", dataIndex: "stype", key: "stype"},
    {title: "Sample size", dataIndex: "ssize", key: "ssize"},
    {title: "Sample size unit", dataIndex: "ssizeunit", key: "ssizeunit"},
    {title: "Keywords", dataIndex: "keywords", key: "keywords"},
    {title: "Sequencing fraction", dataIndex: "sfrac", key: "sfrac"},
    {title: "Sequencing depth", dataIndex: "seqdepth", key: "seqdepth"},
    {title: "Target nucelic acid", dataIndex: "target", key: "target"},
    {title: "Raw reads", dataIndex: "rreads", key: "rreads"},
    {title: "Raw reads NCBI accession code", dataIndex: "rreadacc", key: "rreadacc"},
    {title: "Name of the original file", dataIndex: "rrname", key: "rrname"},
    {title: "Raw reads number", dataIndex: "rreadsnum", key: "rreadsnum"},
    {title: "Trimmed reads", dataIndex: "treads", key: "treads"},
    {title: "File containing trimmed reads", dataIndex: "trname", key: "trname"},
    {title: "Trimmed reads number", dataIndex: "treadsnum", key: "treadsnum"},
    {title: "Coverage", dataIndex: "coverage", key: "coverage"},
    {title: "Assembled file identifier", dataIndex: "assembled", key: "assembled"},
    {title: "Assembled file name", dataIndex: "assname", key: "assname"},
    {title: "Assembly size", dataIndex: "asize", key: "asize"},
    {title: "Number of contigs", dataIndex: "contignumber", key: "contignumber"},
    {title: "Predicted genes file identifier", dataIndex: "pgenes", key: "pgenes"},
    {title: "Predicted genes file name", dataIndex: "pgenesname", key: "pgenesname"},
    {title: "235 rRNA", dataIndex: "twentythreesr", key: "twentythreesr"},
    {title: "Nagoya protocol", dataIndex: "nagoya", key: "nagoya"},
    {title: "Sequrl", dataIndex: "sequrl", key: "sequrl"},
    {title: "Strain collection number", dataIndex: "strccol", key: "strccol"},
]
interface DataType {
  id: number,
  created: string,
  updated: string,
  user_id: number,
  txnr: number,
  version: string,
  entrydate: string,
  firstdate: string,
  draftnumber: string,
  subm?: string,
  emsu?: string,
  cult: string,
  koma: string,
  typn: string,
  otyp: string,
  txnt: number,
  ccsu: string,
  type: string,
  coln: string,
  domain: string,
  kingdom?: string,
  phylum: string,
  phylumety?: string,
  class: string,
  classety?: string,
  order: string,
  orderety?: string,
  family: string,
  familyety?: string,
  gena: string,
  gety: string,
  gent: string,
  spep?: string,
  spty: string,
  spna: string,
  baso?: string,
  ssna?: string,
  ssty?: string,
  coth?: string,
  auth?: string
  titl: string,
  jour: string,
  volume?: string,
  pages?: string,
  doi: string,
  coau: string,
  emau: string,
  sixteensr: string,
  hkgn?: string,
  meca?: string,
  gare: string,
  gaem: string,
  binn: string,
  url?: string,
  gsta: string,
  completeness?: string,
  contamination: number,
  method: string,
  gsiz: number,
  ggcm: number,
  dnae: string,
  asem: string,
  seqt: string,
  bins?: string,
  asft: string,
  coun: string,
  regi: string,
  geol: string,
  lati: number,
  long: number,
  alti: number,
  dept: number,
  sour?: string,
  dats: string,
  hocs: string,
  dati: string,
  datu: string,
  tems: number,
  phsa: number,
  sals: number,
  emet: string,
  orel: string,
  elac?: string,
  temo?: string,
  teml?: string,
  temh?: string,
  temc?: string,
  phop?: string,
  phlo?: string,
  phhi?: string,
  phca?: string,
  salo?: string,
  sall?: string,
  salh?: string,
  salw?: string,
  salc?: string,
  bios?: string,
  habt?: string,
  bior?: string,
  host?: string,
  path?: string,
  extr?: string,
  name: string,
  stype: string,
  ssize: number,
  ssizeunit: string,
  keywords: string[],
  sfrac: string,
  target: string,
  rreads: string,
  rreadacc: number,
  rrname: string,
  rreadsnum?: string,
  treads: string,
  trname: string,
  treadsnum: number,
  coverage: string,
  assembled?: string,
  assname?: string,
  asize: string,
  contignumber: number,
  pgenes: string,
  pgenesname?: string,
  seqdepth: string,
  twentythreesr?: string,
  nagoya: string,
  sequrl?: string,
  strccol?: null
  }
type DataIndex = keyof DataType;
const data_aux : DataType = 
    {
      id: 42,
      created: "08/02/2024",
      updated: "08/02/2024",
      user_id: 1,
      txnr: 146919,
      version: "hidden",
      entrydate: "08/02/2024",
      firstdate: "08/02/2024",
      draftnumber: "hidden",
      cult: "uncultured",
      koma: "isolate",
      typn: "True",
      otyp: "DSM 13855",
      txnt: 309807,
      ccsu: "True",
      type: "DSM 13855",
      coln: "CECT 5946; DSM 13855",
      domain: "Archaea",
      kingdom: null,
      phylum: "Halobacteriota",
      phylumety: null,
      class: "Halobacteria",
      classety: null,
      order: "Halobacteriales",
      orderety: null,
      family: "Haloferacaceae",
      familyety: null,
      gena: "Salinibacter",
      gety: "Sa.li.ni.bac’ter. L. gen. fem. n. salinae, salterns, salt-works; N.L. masc. n. bacter, rod; Gr. neut. dim. n. baktêrion, a rod; N.L. masc. n. Salinibacter, a rod from salt-works",
      gent: "ruber",
      spep: null,
      spty: "ru’ber. L. masc. adj. ruber, red",
      spna: "ruber",
      baso: null,
      ssna: null,
      ssty: null,
      coth: null,
      titl: "Salinibacter ruber gen. nov., sp. nov., a novel, extremely halophilic member of the Bacteria from saltern crystallizer ponds.",
      jour: "Int J Syst Evol Microbiol",
      volume: null,
      pages: null,
      doi: "https://doi.org/10.1099/00207713-52-2-485",
      coau: "Josefa Antón",
      emau: "anton@ua.es",
      sixteensr: "AF323500",
      hkgn: null,
      meca: null,
      gare: "GCA_000013045",
      gaem: "GENOME",
      binn: "GENOME",
      url: null,
      gsta: "Complete",
      completeness: null,
      contamination: 0,
      method: "Checkm",
      gsiz: 3551823,
      ggcm: 66,
      dnae: "Marmur",
      asem: "TIGR ASSEMBLER",
      seqt: "random shotgun method",
      bins: null,
      asft: "Illumina MiSeq (2 x 150)",
      coun: "Spain",
      regi: "Mallorca",
      geol: "Santa Pola (Alicante, Spain)",
      lati: 39.19028,
      long: 2.59021,
      alti: 0,
      dept: 0,
      sour: null,
      dats: "23/06/1999",
      hocs: "12:00:00",
      dati: "19/07/1999",
      datu: "20/05/1999",
      tems: 30,
      phsa: 7,
      sals: 36,
      emet: "The MAG encoded for oxidase, catalase, lysine decarboxylase and hydrolysis of starch. Genes could not be detected for nitrate reductase or the genes for the complete denitrification pathway, ornithine and adenine decarboxylase, arginine dihydrolase, and therefore such traits were considered negative. The MAG encoded for genes for flagella assembly, indicating putative motility.",
      orel: "Aerobic metabolism",
      elac: null,
      temo: null,
      teml: null,
      temh: null,
      temc: null,
      phop: null,
      phlo: null,
      phhi: null,
      phca: null,
      salo: null,
      sall: null,
      salh: null,
      salw: null,
      salc: null,
      bios: null,
      habt: null,
      bior: null,
      host: null,
      path: null,
      extr: null,
      name: "CR30",
      stype: "Hypersaline water",
      ssize: 5,
      ssizeunit: "l",
      keywords: [
      "hypersaline",
      "saltern",
      "water"
      ],
      sfrac: "Virus",
      target: "DNA",
      rreads: "d1ce5e6b-c0e2-3019-8c48-20d5ba861ea6",
      rreadacc: 0,
      rrname: "fitxero ????",
      rreadsnum: null,
      treads: "1efde062-3612-3a5a-b9ca-bb9c932d046b",
      trname: "xxxxxxx bp XXXXX=size?",
      treadsnum: 345672,
      coverage: "??",
      assembled: null,
      assname: null,
      asize: "xxxxxxxx bp / YYY",
      contignumber: 0,
      pgenes: "??",
      pgenesname: null,
      seqdepth: "B",
      twentythreesr: null,
      nagoya: "",
      sequrl: null,
      strccol: null
  }


const data = Array(10).fill({}).map((_, i) => {
  const aux = Object.assign({}, data_aux)
  // @ts-ignore: Unreachable code error
  Object.keys(aux).forEach((key, _) => {aux[key] = key == "VISIBILITY"? aux[key] : aux[key]});
  return aux
}
)

const OptionsDBSample = columns.slice(0,4).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsSubmission = columns.slice(4,9).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsSubmitter = columns.slice(9,11).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsAuthorship = columns.slice(11,19).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsMaterial = columns.slice(19,47).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsGene = columns.slice(47,65).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsOrigin = columns.slice(65,80).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsMetabolic = columns.slice(80,96).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsOrganism = columns.slice(96,102).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsSample = columns.slice(102,108).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));
const OptionsSequencing = columns.slice(108,128).map(({ key, title }, _) => ({
  label: title,
  value: key,
}));

const PlainOptionsDBSample= OptionsDBSample.map((item) => item.value as string)
const PlainOptionsSubmission= OptionsSubmission.map((item) => item.value as string)
const PlainOptionsSubmitter= OptionsSubmitter.map((item) => item.value as string)
const PlainOptionsAuthorship= OptionsAuthorship.map((item) => item.value as string)
const PlainOptionsMaterial= OptionsMaterial.map((item) => item.value as string)
const PlainOptionsGene= OptionsGene.map((item) => item.value as string)
const PlainOptionsOrigin= OptionsOrigin.map((item) => item.value as string)
const PlainOptionsMetabolic= OptionsMetabolic.map((item) => item.value as string)
const PlainOptionsOrganism= OptionsOrganism.map((item) => item.value as string)
const PlainOptionsSample= OptionsSample.map((item) => item.value as string)
const PlainOptionsSequencing= OptionsSequencing.map((item) => item.value as string)

export {data, columns, OptionsDBSample, OptionsSubmission, OptionsSubmitter, OptionsAuthorship, OptionsMaterial,
  OptionsGene, OptionsOrigin, OptionsMetabolic, OptionsOrganism, OptionsSample, OptionsSequencing, PlainOptionsDBSample,
  PlainOptionsSubmission, PlainOptionsSubmitter, PlainOptionsAuthorship, PlainOptionsMaterial, PlainOptionsGene, PlainOptionsOrigin,
  PlainOptionsMetabolic, PlainOptionsOrganism, PlainOptionsSample, PlainOptionsSequencing
}
export type {DataType, DataIndex}
